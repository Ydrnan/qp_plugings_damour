#+begin_src f90 :comments org :tangle save_wf.irp.f
subroutine save_wf_cc(l_det,l_coef,nb_coef)

  implicit none

  integer, intent(in) :: nb_coef
  integer(bit_kind), intent(in) :: l_det(N_int,2,nb_coef)
  double precision, intent(in) :: l_coef(nb_coef)
  integer :: i,j,k

  if (write_cc_wf) then
    ! Save the wave function
    print*,'Save the wave function...'
    ! Save a one det wf
    do k = 1, N_int
      psi_det(k,1,1) = l_det(k,1,1)
      psi_det(k,2,1) = l_det(k,2,1)
    enddo
    psi_coef(1,1) = l_coef(1)
    do i = 2, N_states
      psi_coef(1,i) = 0d0
    enddo
    N_det = 1
    SOFT_TOUCH psi_det psi_coef N_det
    call save_wavefunction_general(N_det,N_states,psi_det,size(psi_coef,1),psi_coef)
    ! Just to have a large enough psi_det vector...
    if (nb_coef > N_det) then
      call fill_H_apply_buffer_no_selection(nb_coef-N_det,l_det,N_int,0)
      call copy_H_apply_buffer_to_wf
      SOFT_TOUCH psi_det psi_coef N_det
    endif
    ! Save the wave function
    N_det = nb_coef
    do i = 1, N_det
      do k = 1, N_int
        psi_det(k,1,i) = l_det(k,1,i)
        psi_det(k,2,i) = l_det(k,2,i)
      enddo
    enddo
    do i = 1, N_det
      psi_coef(i,1) = l_coef(i)
    enddo
    do j = 2, N_states
      do i = 1, N_det
        psi_coef(i,j) = 0d0
      enddo
    enddo
    call save_wavefunction_general(N_det,N_states,psi_det,size(psi_coef,1),psi_coef)
    print*,'Done'
  endif

end
#+end_src
